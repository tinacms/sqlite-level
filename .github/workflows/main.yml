name: Build, Test for Main

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test
  
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Generate a token
        uses: actions/create-github-app-token@v1
        id: generate-token
        with:
          # uses https://github.com/organizations/tinacms/settings/apps/release-bot-allow-prs-and-push
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_SECRET }}

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: actions/checkout@v4
        with:
          token: ${{ steps.generate-token.outputs.token || secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: package.json

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Test
        run: pnpm test

      - name: Build Types
        run: pnpm types

      - name: Set NPMRC
        run: echo "//registry.npmjs.org/:_authToken=${NPM_AUTH_TOKEN}" > .npmrc
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Create Release Pull Request
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm run version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish previews
        if: steps.changesets.conclusion == 'skipped'
        run: |
          pnpm version:snapshot
          pnpm publish -r --tag beta --no-git-checks --access public
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token || secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

      - name: Publish
        if: steps.changesets.conclusion == 'success' && steps.changesets.outputs.hasChangesets == 'false'
        run: |
          pnpm publish -r --no-git-checks --access public
          pnpm push-tags
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token || secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
